[ {kernel,
   [ {logger_level, debug}
   , {logger, [
                %% Console
                { handler, default, logger_std_h
                , #{ formatter => { logger_formatter
                                  , #{ single_line => true
                                     , time_offset => "Z"
                                     , chars_limit => 32768
                                     , depth => 40
                                     , template => [time, " ", level, ": ", pid, " ", {module, [module, ": "], [mfa, ": "]}, {text, [text, ", "], []}, msg, "\n"]
                                     }}
                   , filters => [ %%{domain_filter, {fun logger_filters:domain/2, {stop, sub, ['otp', 'sasl']}}}
                                  {domain_filter, {fun logger_filters:domain/2, {stop, sub, ['audit']}}}
                                ]
                   }
                }

               %% RTS-V2 Alert logging
              , { handler, rtsv2_alert, rtsv2_alert_logger_h
                , #{ filters => [ {ingest_started_filter, {fun erl_logger_filters:filter_match/2,
                                                           { #{ alertId => ingestStarted }
                                                           , [ {metadata, [domain], {equal, ['Ingest', 'Instance']}}
                                                             , {metadata, [type], {equal, event}}
                                                             , {metadata, [event], {equal, start}}
                                                             ]
                                                           }
                                                          }}
                                , {invalid_video_format, {fun erl_logger_filters:filter_match/2,
                                                          { #{ alertId => invalidVideoFormat }
                                                          , [ {metadata, [mfa], {equal, {rtmp_utils,map_video_format_from_rtmp,1}}}
                                                            ]
                                                          }
                                                         }}
                                , {lsrs_failure, {fun erl_logger_filters:filter_match/2,
                                                  { #{ }
                                                  , [ {metadata, [alertId], {equal, lsrsFailure}}
                                                    , {report, [reason], {match,
                                                                          {spudError, {responseError, {spudResponse, '$1', '_', '_'}}},
                                                                          [ {'orelse', {'<', '$1', 400},{'>=', '$1', 500}} ]
                                                                         }}
                                                    ]
                                                  }
                                                 }}
                                ]
                   , filter_default => stop
                   , config => #{ message_bus => rtsv2_alerts
                                }
                   }
                }
              ]}
   ]
  }
].
