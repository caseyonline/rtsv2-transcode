%% -*- mode:erlang;tab-width:2;erlang-indent-level:2;indent-tabs-mode:nil -*-
[ {id3as_common,
   [ {disk_log_root, "logs"}
   , {logger,
      [
       %% debug.log
       {handler, debug_log, logger_basedir_h,
        #{config => #{
                      file => "debug.log",
                      max_no_files => 10,
                      max_no_bytes => 22428800 % 10 x 5mb
                     },
          level => debug,
          formatter => {logger_formatter, #{single_line => true,
                                            time_offset => "Z",
                                            chars_limit => 4096,
                                            depth => 40,
                                            template => [time, " ", {event, [event], [level]},  ":\t", pid, " ", mfa, ":", line, "\t", {text, [text, ", "], []}, msg, "\n"]
                                           }
                       },
          filters => [
                      %% {domain_filter, {fun logger_filters:domain/2, {stop, sub, ['otp', 'sasl']}}}
                      {domain_filter, {fun logger_filters:domain/2, {stop, sub, ['audit']}}}
                     ]
         }
       },

       %% highlights.log
       {handler, highlights_log, logger_basedir_h,
        #{config => #{
                      file => "highlights.log",
                      max_no_files => 10,
                      max_no_bytes => 22428800 % 10 x 5mb
                     },
          formatter => {logger_formatter, #{single_line => true,
                                            time_offset => "Z",
                                            chars_limit => 4096,
                                            depth => 40,
                                            template => [time, " ", {event, [event], [level]},  ":\t", pid, " ", mfa, ":", line, "\t", {text, [text, ", "], []}, msg, "\n"]
                                           }
                       },
          filter_default => stop,
          filters => [ {command, {fun erl_logger_filters:filter_match/2, { #{ }, [ {metadata, [type], {equal, command}} ] }}}
                     , {event, {fun erl_logger_filters:filter_match/2, { #{ }, [ {metadata, [type], {equal, event}} ] }}}
                     ]
         }
       },

       %% error.log
       {handler, error_log, logger_basedir_h,
        #{config => #{
                      file => "error.log",
                      max_no_files => 10,
                      max_no_bytes => 22428800 % 10 x 5mb
                     },
          level => error,
          formatter => {logger_formatter, #{single_line => true,
                                            time_offset => "Z",
                                            chars_limit => 4096,
                                            depth => 40,
                                            template => [time, " ", level, ": ", pid, " ", mfa, ":", line, " ", {text, [text, ", "], []}, msg, "\n"]
                                           }
                       },
          filters => [
                      %% {domain_filter, {fun logger_filters:domain/2, {stop, sub, ['otp', 'sasl']}}}
                      {domain_filter, {fun logger_filters:domain/2, {stop, sub, ['audit']}}}
                     ]
         }
       },

       %% ingest_eq.log
       {handler, ingest_eq_log, logger_basedir_h,
        #{config => #{
                      file => "ingest_eq.log",
                      max_no_files => 10,
                      max_no_bytes => 22428800 % 10 x 5mb
                     },
          level => debug,
          formatter => {report_logger_formatter, #{single_line => true,
                                                   time_offset => "Z",
                                                   chars_limit => 4096,
                                                   depth => 40,
                                                   template => [time, ", ",
                                                                [report, auditEvent], ", ",
                                                                [report, slotId], ", ",
                                                                [report, ingestIp], ", ",
                                                                [report, ingestPort], ", ",
                                                                [report, userIp], ", ",
                                                                [report, username], ", ",
                                                                [report, shortname], ", ",
                                                                [report, streamName], ", ",
                                                                [report, slotRole], ", ",
                                                                [report, connectionType], ", ",
                                                                [report, startMs], ", ",
                                                                [report, endMs], ", ",
                                                                [report, bytesWritten], ", ",
                                                                [report, bytesRead], ", ",
                                                                [report, lostPackets], "\n"
                                                               ]
                                                  }
                       },
          filter_default => stop,
          filters => [
                      {domain_filter, {fun logger_filters:domain/2, {log, equal, ['audit', 'ingest']}}}
                     ]
         }
       },

       %% egest_eq.log
       {handler, egest_eq_log, logger_basedir_h,
        #{config => #{
                      file => "egest_eq.log",
                      max_no_files => 10,
                      max_no_bytes => 22428800 % 10 x 5mb
                     },
          level => debug,
          formatter => {report_logger_formatter, #{single_line => true,
                                                   time_offset => "Z",
                                                   chars_limit => 4096,
                                                   depth => 40,
                                                   template => [time, ", ",
                                                                [report, auditEvent], ", ",
                                                                [report, slotId], ", ",
                                                                [report, egestIp], ", ",
                                                                [report, egestPort], ", ",
                                                                [report, subscriberIp], ", ",
                                                                [report, username], ", ",
                                                                [report, shortname], ", ",
                                                                [report, connectionType], ", ",
                                                                [report, startMs], ", ",
                                                                [report, endMs], ", ",
                                                                [report, bytesWritten], ", ",
                                                                [report, bytesRead], ", ",
                                                                [report, lostPackets], "\n"
                                                               ]
                                                  }
                       },
          filter_default => stop,
          filters => [
                      {domain_filter, {fun logger_filters:domain/2, {log, equal, ['audit', 'egest']}}}
                     ]
         }
       }


      ]}
   ]}
].
