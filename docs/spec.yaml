openapi: '3.0.3'
info:
  version: '1.0'
  title: RTSv2 Documentation
  description: |
    OpenAPI (fka Swagger) specification for the id3as RTSv2 API.

    # Introductions

    Welcome to Real Time Streaming (v2): An implementation of id3as Advanced Video Pipelines.
    Implemented For LIMELIGHT NETWORKS INC - (c) id3as 2019-2020.

    This documentation is designed for engineers who wish to develop control and monitoring systems that directly interact with the underlying RTSv2 system.

    It contains four key sections:

      1. A highlevel systems description explaining how to setup the software in such a way that you can develop control and monitoring systems and you can execute examples in this documentation.

      2. A detailed API documentation explaining the input and output API calls that RTSv2 can handle.
         This is split into:

          * The Public API (designed for end user applications to be able to interact with)
          * The Support API (designed for internal operations teams at Limelight)

      3. Four reference examples of developer focussed 'journeys' exploring how to use the API to achieve various key tasks:
          * A) 'A day in the life of a stream'
          * B) 'A day in the life of the infrastructure'
          * C) Platform reporting and queries
          * D) Interfacing to Prometheus, logging configuration and basic alerting.

    ## Overview
    This section will describe (or reference other detail) the aim of the system, how it is intended to be deployed, what the API does, how calls to the API can be manually simulated for testing and otherwise used by the developer, and how the documentation and API reference is setup optimally for developer purposes.

    ## Quick Start
      A working system and 'live' documentation that can be developed directly against that working system is most easily setup by following the Readme files in order:

      * https://github.com/id3as/rtsv2/blob/master/SETUP.md Before you start.
      * https://github.com/id3as/rtsv2/blob/master/docs/README.md to setup the documentation 'live' on the local system.
      * https://github.com/id3as/rtsv2/blob/master/README.md to setup the system and launch a simple test.



    ## Security Model
    This section will explain how tokens and security are handled etc so you know what to expect as you go to production.

    # Journeys

    ## 'A day in the life of a stream'
    ## 'A day in the life of the infrastructure'
    ## Platform reporting and queries
    ## Interfacing to Prometheus, logging configuration and basic alerting.



    ```
    {
      "code": 404,
      "title": "Resource not found"
    }
    ```
  x-logo:
    url: https://static.wixstatic.com/media/b1006e_fb5b447f5d124676b0b1a328eb6adbd5~mv2_d_2986_1252_s_2.png
tags:
  - name: service metadata
    description: The service API provides additional metadata needed to make the OOAPI fit for this organization.
  - name: Public
    description: Description for the Public API.
  - name: Support
    description: Description for Support API.
produces:
  - "application/json-ld"
x-tagGroups:
  - name: Api
    tags:
      - Public
      - Support
paths:
  /public/client/{slotId}/{slotRole}/player:
    $ref: api/public/PublicClientPlayer.yaml
  /public/client/{slotId}/{slotRole}/session:
    $ref: api/public/PublicClientPlayerControl.yaml
  /public/discovery/v1/{shortName}/{streamName}:
    $ref: api/public/PublicStreamDiscovery.yaml
  /public/ingest/{shortName}/{streamName}/ingest:
    $ref: api/public/PublicClientWebRTCIngest.yaml
  /public/ingest/{shortName}/{streamName}/session:
    $ref: api/public/PublicClientWebRTCIngestControl.yaml

  /support/canary/:
    $ref: api/support/SupportCanary.yaml
  # client bases routes
  # /support/canary/client/{slotId}/{slotRole}/:
  #   $ref: api/support/SupportCanaryClientPlayerAssets.yaml
  # /support/canary/client/{slotId}/{slotRole}/player:
  #   $ref: api/support/SupportCanaryClientPlayer.yaml
  # /support/canary/client/{slotId}/{slotRole}/session:
  #   $ref: api/support/SupportCanaryClientPlayerControl.yaml
  /support/canary/discovery/v1/{shortName}/{streamName}:
    $ref: api/support/SupportCanaryStreamDiscovery.yaml
  # /support/canary/ingest/{slotId}/{slotRole}/ingest:
  #   $ref: api/support/SupportCanaryClientWebRTCIngest.yaml
  # /support/canary/ingest/{slotId}/{slotRole}/session:
  #   $ref: api/support/SupportCanaryClientWebRTCIngestControl.yaml
  /support/egest/metrics:
    $ref: api/support/SupportEgestInstancesMetrics.yaml
  /support/egest/{slotId}/{slotRole}:
    $ref: api/support/SupportEgestStats.yaml
  /support/healthCheck/:
    $ref: api/support/SupportHealthCheck.yaml


  /support/ingest/metrics/:
    $ref: api/support/SupportIngestInstancesMetrics.yaml
  /support/ingest/{slotId}/{slotRole}/{profileName}:
    $ref: api/support/SupportIngestInstance.yaml
  /support/ingestAggregator/:
    $ref: api/support/SupportIngestAggregator.yaml
  /support/ingestAggregator/{slotId}/{slotRole}/activeIngests/{profileName}/control:
    $ref: api/support/SupportIngestAggregatorActiveIngestsPlayerControl.yaml
  /support/ingestAggregator/{slotId}/{slotRole}/activeIngests/{profileName}/js/:
    $ref: api/support/SupportIngestAggregatorActiveIngestsPlayerJs.yaml
  /support/ingestAggregator/{slotId}/{slotRole}/activeIngests/{profileName}/player:
    $ref: api/support/SupportIngestAggregatorActiveIngestsPlayer.yaml
  /support/ingestAggregator/{slotId}/{slotRole}/js/:
    $ref: api/support/SupportIngestAggregatorPlayerJs.yaml
  /support/ingestAggregator/{slotId}/{slotRole}/player:
    $ref: api/support/SupportIngestAggregatorPlayer.yaml
  /support/ingestAggregator/{slotId}/{slotRole}:
    $ref: api/support/SupportIngestAggregator.yaml
  /support/jsonld/{contexType}:
    $ref: api/support/SupportJsonLdContext.yaml
  /support/popDefinition/:
    $ref: api/support/SupportPoPDefinition.yaml
  /support/relay/{slotId}/{slotRole}:
    $ref: api/support/SupportRelayStats.yaml
  /support/runState/:
    $ref: api/support/SupportRunState.yaml
  /support/state/:
    $ref: api/support/SupportServerState.yaml
  /support/state/slot/{slotId}:
    $ref: api/support/SupportSlotState.yaml
  /support/timedRoutes/:
    $ref: api/support/SupportTimedRoutes.yaml
  /support/timedRoutes/{popName}:
    $ref: api/support/SupportTimedRoutesForPoP.yaml
  /support/vm/v1/metrics/:
    $ref: api/support/SupportVMMEtrics.yaml
